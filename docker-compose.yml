version: '3.8'

services:
  db:
    image: postgres:17-alpine
    container_name: CosmosOdyssey-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: heaparool
      POSTGRES_DB: CosmosOdyssey-db
    networks:
      - cosmos_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d CosmosOdyssey-db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin4:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-CosmosOdyssey
    ports:
      - 8082:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: cosmos@odyssey.com
      PGADMIN_DEFAULT_PASSWORD: cosmos
    networks:
      - cosmos_net
    depends_on:
      - db
  
  backend:
    build:
      context: ./REST
      dockerfile: Dockerfile
    ports:
      - 3000:80
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=CosmosOdyssey-db;Username=postgres;Password=heaparool
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ./REST/appsettings.Docker.json:/app/appsettings.Docker.json
    depends_on:
      db: 
        condition: service_healthy
    networks:
      - cosmos_net

  frontend: 
    build: 
      context: ./FrontEnd/cosmosodyssey 
      dockerfile: Dockerfile
    ports:
      - 5173:5173  
    volumes:
      - ./FrontEnd/CosmosOdyssey:/app
      - /app/node_modules
    networks:
      - cosmos_net
    environment:
      VUE_APP_API_URL: http://backend:80
    depends_on:
      - backend

networks:
  cosmos_net:

volumes:
  pgadmin-data: